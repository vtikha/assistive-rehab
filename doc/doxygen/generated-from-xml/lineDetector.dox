
  /**
  *
  * @ingroup lineDetector 
  * \defgroup lineDetector lineDetector
  * This module takes as input the RGB image containing two lines composed of a set of ArUco markers and publishes the estimated pose of the markers with respect to the robot camera and root.
  * Version:0.3.0
  * \author  Valentina Vasco valentina.vasco@iit.it
  * \n
  * \copyright  Released under the terms of the BSD 3-Clause License.
  * \section intro_sec Description
  *
  
   This module takes as input the RGB image containing two lines composed of a set of markers and publishes the estimated poses of the markers with respect to the camera and to robot root.
   It makes use of an OpenCV ArUco Board of 6x1 markers. The used board can be found in `app/conf` (the two images were sticked togheter for printing a marker big enough to be visible from a certain distance).
   The detected start and finish lines are published into the \ref objectsPropertiesCollector, with the pose estimated with respect to the robot camera (`pose_camera`) and to the robot root (`pose_root`), as following:

   \code
   ((finish-line (pose_camera (x y z ax ay az theta)) (pose_root (x y z ax ay az theta))) (id opc_id))
   \endcode

  
  * \section parameters_sec Parameters     
  
  *- --name: The module's name; all the open ports will be tagged with the prefix /name.
  *- --nx: Vector containing the number of markers along X direction, for the start and the finish line respectively.
  *- --ny: Vector containing the number of markers along Y direction, for the start and the finish line respectively.
  *- --marker-size: Vector containing the marker's length, for the start and the finish line respectively [m].
  *- --marker-dist: Vector containing the distance between markers, for the start and the finish line respectively [m].
  * \section inputports_sec Input Ports
  * 
  *- /lineDetector/img:i [ImageOfPixelRgb]  [default carrier:]: 
            Receives the RGB image.
          
  *
  
  *- /lineDetector/gaze/state:i [Property]  [default carrier:]: 
            Retrieves the current pose of the camera.
          
  *
  
  * \section outputports_sec Output Ports
  * 
  *- /lineDetector/img:o [ImageOfPixelRgb]  [default carrier:]: 
            Streams out the input image with detected axes.
          
  *
  
  *- /lineDetector/cam:rpc [rpc]  [default carrier:]: 
            Retrieves intrinsics from the camera.
          
  *
  
  *- /lineDetector/opc:rpc [rpc]  [default carrier:]: 
            Adds the start and the finish line to \ref objectsPropertiesCollector.
          
  *
  
  *
  * \section services_sec Services
  * 
  *- /lineDetector/cmd:rpc
  *  [rpc-server]: 
  * service port
  * . This service is described in lineDetector_IDL (idl.thrift)
  * 
  *
  * 
  *
  *
  **/

